program -> declarationList
declarationList -> declarationList declaration | declaration
declaration -> variableDeclaration | functionDeclaration
variableDeclaration -> typeSpecifier variableDeclarationList ;
variableDeclarationList -> variableDeclarationList , variableDeclarationInitialize | variableDeclarationInitialize
variableDeclarationInitialize -> ID | ID = numericalExpression
functionDeclaration -> typeSpecifier ID ( ) compoundStatement
compoundStatement -> { statementList }
statementList -> statementList statement | statement
statement -> expressionStatement | compoundStatement | selectionStatement | iterationStatement | returnStatement | breakStatement
expressionStatement -> ID = numericalExperssion ;
selectionStatement -> if ( boolExpression ) statement | if ( boolExpression ) statement else statement
iterationStatement -> while ( boolExpression ) statement
returnStatement -> return ; | return numericalExpression ;
breakStatement -> break ;
numericalExpression -> s
s -> t | s + t | s - t
t -> e | t x e | t / e
e -> p | p ^ e
p -> ID | numConst | ( s )
boolExpression -> m | boolExpression && m | boolExpression || m
m -> o | ! m
o -> grb | ( boolExpression )
grb -> bool | numericalExpression == numericalExpression | numericalExpression > numericalExpression | numericalExpression < numericalExpression
bool -> True | False
