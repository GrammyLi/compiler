# General

program -> declarationList
declarationList -> declarationList declaration | declaration
declaration -> varDec | functionDeclaration | includeStatement

# Variable Declarations

varDec -> typeSpecifier ID = expression ; | typeSpecifier ID ;
assignment -> ID = expression ; | ID += expression ; | ID -= expression ;

# Function Declarations

functionDeclaration -> typeSpecifier ID ( ) { statementList }

# Statements

statementList -> statementList statement | statement
statement -> varDec | returnStatement | ifStatement | assignment | includeStatement | forStatement | callStatement
returnStatement -> return expression ;
includeStatement -> fileName
callStatement -> ID ( str ) ;

# Control Flow

ifStatement -> if ( expression ) { statementList } | if ( expression ) { statementList } else { statementList }
forStatement -> for ( assignment expression ; ID ++ ) { statementList }

# Expressions

expression -> a

# Binary operations
a -> b && a | b
b -> c || b | c

# Not working, overlap with e != d rule?
#c -> ! c | d
c -> d

# Comparisons
d -> e <= d | e >= d | e < d | e > d | e != d | e == d | e

# Multiplication and addition
e -> f + e | f - e | f
f -> g * f | g / f | g % f | g

# Immutables
g -> var
var -> constNum | ID
